# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  workflow_dispatch:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: Windows
    if: ${{ contains(github.event.head_commit.message, '#release') || github.event_name == 'workflow_dispatch'}}
    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      shell: cmd
      run: cmake -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -B ${{github.workspace}}/build -G "Visual Studio 17 2022" -T host=x64 -A x64 -DNVAPI_LOCATION=${{github.workspace}}/../../nvapi/

    - name: Build
      # Build your program with the given configuration
      shell: cmd
      run: |
          cmake --build ${{github.workspace}}/build --config Release --target ALL_BUILD \
          ${{github.workspace}}/../../7za.exe a -tzip ${{github.workspace}}/build/bin/dx12_present_barrier.zip ${{github.workspace}}/build/bin/Release/*

    - name: Get Date
      shell: cmd
      id: date
      run: echo "today=%DATE%" >> "$GITHUB_OUTPUT"
    
    - name: Release
      uses: svenstaro/upload-release-action@v2
      env:
        Date: ${{ steps.date.outputs.today }}
      with:
        release_name: $Date
        file: ${{github.workspace}}/build/bin/dx12_present_barrier.zip
        asset_name: dx12_present_barrier.zip
        tag: ${{ github.ref }}
        overwrite: true
        body: "test release text"
